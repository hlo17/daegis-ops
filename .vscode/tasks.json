{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "Guard: Safety Sentinel (L11)",
      "type": "shell",
      "command": "bash scripts/guard/safety_sentinel.sh",
      "options": { "cwd": "${workspaceFolder}" },
      "problemMatcher": []
    },
    {
      "label": "Port Guard (8080/9091)",
      "type": "shell",
      "command": "${workspaceFolder}/scripts/port_guard.sh",
      "presentation": {
        "reveal": "never",
        "panel": "dedicated",
        "clear": true
      }
    },
    {
      "label": "Uvicorn (copilot-exec)",
      "type": "shell",
      "command": "python3 -m uvicorn router.app:app --host 0.0.0.0 --port 8080",
      "dependsOn": [
        "Port Guard (8080/9091)"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated",
        "clear": true,
        "group": "copilot-exec"
      },
      "options": {
        "cwd": "${workspaceFolder}"
      }
    },
    {
      "label": "Prometheus (docker, 9091)",
      "type": "shell",
      "command": "docker ps --format '{{.Names}}' | grep -q '^prometheus$' && docker restart prometheus || echo 'hint: start via compose; expected port mapping 9091:9090'",
      "presentation": {
        "reveal": "never",
        "panel": "dedicated"
      }
    },
    {
      "label": "Smoke: MISS/HIT/504",
      "type": "shell",
      "command": "bash -lc \"curl -isS -XPOST :8080/chat -H 'Content-Type: application/json' -d '{\\\"q\\\":\\\"hello\\\"}' | head -n12; curl -isS -XPOST :8080/chat -H 'Content-Type: application/json' -d '{\\\"q\\\":\\\"hello\\\"}' | head -n12; curl -isS -XPOST :8080/chat -H 'Content-Type: application/json' -d '{\\\"q\\\":\\\"slow\\\",\\\"delay\\\":4}' | head -n20\"",
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "Metrics: grep rt_*",
      "type": "shell",
      "command": "bash -lc \"curl -s :8080/metrics | grep -E 'rt_latency_ms_bucket|rt_cache_(hits|misses)_total' || echo 'no data yet'\"",
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "Router: Dev (reload)",
      "type": "shell",
      "command": "python -m uvicorn router.app:app --host 0.0.0.0 --port 8080 --reload",
      "presentation": {
        "reveal": "always",
        "panel": "dedicated",
        "clear": true
      },
      "options": {
        "cwd": "${workspaceFolder}"
      }
    },
    {
      "label": "Router: Smoke (headers)",
      "type": "shell",
      "command": "bash -c \"curl -s -D - -o /dev/null -X POST http://127.0.0.1:8080/chat -H 'Content-Type: application/json' -d '{\\\"q\\\":\\\"test1\\\"}' | tr -d '\\r' | grep -iE '^(HTTP/|x-cache|x-corr-id|x-episode-id)'; curl -s -D - -o /dev/null -X POST http://127.0.0.1:8080/chat -H 'Content-Type: application/json' -d '{\\\"q\\\":\\\"test1\\\"}' | tr -d '\\r' | grep -iE '^(HTTP/|x-cache|x-corr-id|x-episode-id)'; curl -s -D - -o /dev/null -X POST http://127.0.0.1:8080/chat -H 'Content-Type: application/json' -d '{\\\"q\\\":\\\"slow\\\",\\\"delay\\\":4}' | tr -d '\\r' | grep -iE '^(HTTP/|x-cache|x-corr-id|x-episode-id)'\"",
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "Router: Metrics",
      "type": "shell",
      "command": "curl -s http://127.0.0.1:8080/metrics | egrep 'rt_cache_(hits|misses)_total|rt_latency_ms_bucket' || true",
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "Uvicorn (no-decision-log)",
      "type": "shell",
      "command": "python -m uvicorn router.app:app --host 0.0.0.0 --port 8080 --reload",
      "presentation": {
        "reveal": "always",
        "panel": "dedicated",
        "clear": true
      },
      "options": {
        "cwd": "${workspaceFolder}",
        "env": {
          "LOG_DECISION": "0"
        }
      }
    },
    {
      "label": "Evidence: Snapshot (append)",
      "type": "shell",
      "command": "bash scripts/dev/snapshot_evidence.sh",
      "problemMatcher": []
    },
    {
      "label": "SAFE: Check & Hint (once)",
      "type": "shell",
      "command": "bash scripts/guard/alert_hook.sh",
      "problemMatcher": []
    },
    {
      "label": "Ledger: Rotate (10MB)",
      "type": "shell",
      "command": "bash scripts/dev/rotate_decision.sh",
      "problemMatcher": []
    },
    {
      "label": "Episodes: Tail (last 10)",
      "type": "shell",
      "command": "bash scripts/dev/episodes_tail.sh 10",
      "problemMatcher": []
    },
    {
      "label": "SAFE: Watch (every 60s)",
      "type": "shell",
      "command": "watch -n 60 bash scripts/guard/alert_hook.sh",
      "problemMatcher": []
    },
    {
      "label": "SAFE: Quorum Check",
      "type": "shell",
      "command": "bash scripts/guard/quorum_safe.sh",
      "problemMatcher": []
    },
    {
      "label": "SAFE: Approve (HUMAN)",
      "type": "shell",
      "command": "bash -lc 'mkdir -p ops/quorum && date -u > ops/quorum/HUMAN.ok && ls -l ops/quorum/HUMAN.ok'",
      "problemMatcher": []
    },
    {
      "label": "Intent: Smoke (3 headers)",
      "type": "shell",
      "command": "bash -lc 'for i in plan analyze publish; do echo \"-- $i --\"; curl -s -D - -o /dev/null -X POST http://127.0.0.1:8080/chat -H \"Content-Type: application/json\" -H \"X-Intent: $i\" -d \"{\\\"user\\\":\\\"test\\\",\\\"content\\\":\\\"intent smoke\\\"}\" | tr -d \"\\r\" | grep -iE \"^(HTTP/|x-intent|x-episode-id)\"; echo; done'",
      "problemMatcher": []
    },
    {
      "label": "Review: Gate (API x3)",
      "type": "shell",
      "command": "bash scripts/dev/review_gate.sh",
      "problemMatcher": []
    },
    {
      "label": "Review: Gate+Quorum",
      "type": "shell",
      "command": "bash scripts/dev/review_gate.sh",
      "problemMatcher": []
    },
    {
      "label": "Audit: Link hashes",
      "type": "shell",
      "command": "bash scripts/dev/audit_link_hashes.sh",
      "problemMatcher": [],
      "group": "build"
    },
    {
      "label": "Copilot: Sync README from INSTRUCTIONS",
      "type": "shell",
      "command": "bash scripts/dev/sync_copilot_readme.sh",
      "problemMatcher": []
    },
    {
      "label": "Metrics: Probe (Phase V)",
      "type": "shell",
      "command": "bash scripts/dev/metrics_check.sh",
      "options": { "cwd": "${workspaceFolder}" },
      "problemMatcher": []
    },
    {
      "label": "Ledger: Hash-Relay (Phase VI PoC·dry)",
      "type": "shell",
      "command": "bash scripts/dev/hash_relay.sh",
      "options": { "cwd": "${workspaceFolder}" },
      "problemMatcher": []
    },
    {
      "label": "Dev: Run (env+clean)",
      "type": "shell",
      "command": "bash -lc 'source scripts/dev/env_local.sh && pgrep -f \"uvicorn.*router.app\" && kill $(pgrep -f \"uvicorn.*router.app\") || true; sleep 1; pgrep -f \"uvicorn.*router.app\" && kill -9 $(pgrep -f \"uvicorn.*router.app\") || true; : > /tmp/router.log; python -m uvicorn router.app:app --host 0.0.0.0 --port 8080'",
      "options": { "cwd": "${workspaceFolder}" },
      "problemMatcher": []
    },
    {
      "label": "Proof: L2+ tuner smoke",
      "type": "shell",
      "command": "bash -lc 'curl -s -X POST http://127.0.0.1:8080/chat -H \"Content-Type: application/json\" -d ''{\"q\":\"tuner smoke\"}'' >/dev/null; tail -1 logs/decision.jsonl | jq -r ''.tuning.sla_suggested_ms // \"(no tuning)\"'''",
      "options": { "cwd": "${workspaceFolder}" },
      "problemMatcher": []
    },
    {
      "label": "Metrics: Probe (L2+)",
      "type": "shell",
      "command": "bash scripts/dev/metrics_probe.sh",
      "options": { "cwd": "${workspaceFolder}" },
      "problemMatcher": []
    },
    {
      "label": "Ops: Sanity Combo",
      "type": "shell",
      "command": "bash scripts/dev/ops_sanity.sh",
      "options": { "cwd": "${workspaceFolder}" },
      "problemMatcher": []
    },
    {
      "label": "Learning: Probe (Cerebellum)",
      "type": "shell",
      "command": "bash scripts/dev/learning_probe.sh",
      "options": { "cwd": "${workspaceFolder}" },
      "problemMatcher": []
    },
    {
      "label": "Audit: Federate (push)",
      "type": "shell",
      "command": "bash scripts/dev/audit_federate.sh",
      "options": { "cwd": "${workspaceFolder}" },
      "problemMatcher": []
    },
    {
      "label": "Consensus: Federate (pull)",
      "type": "shell",
      "command": "bash scripts/dev/consensus_federate.sh",
      "options": { "cwd": "${workspaceFolder}" },
      "problemMatcher": []
    },
    {
      "label": "Audit: Federate (15m loop)",
      "type": "shell",
      "command": "bash -lc 'INT=900 COUNT=0 bash scripts/dev/audit_federate_loop.sh'",
      "options": { "cwd": "${workspaceFolder}" },
      "problemMatcher": []
    },
    {
      "label": "Reflex: Eval (alerts)",
      "type": "shell",
      "command": "bash -lc 'HOLD_N=3 E5XX_N=2 bash scripts/guard/alert_eval.sh'",
      "options": { "cwd": "${workspaceFolder}" },
      "problemMatcher": []
    },
    {
      "label": "Reflex: Eval (alerts, v2)",
      "type": "shell",
      "command": "bash -lc 'HOLD_N=3 E5XX_N=2 bash scripts/guard/alert_eval_v2.sh'",
      "options": { "cwd": "${workspaceFolder}" },
      "problemMatcher": []
    },
    {
      "label": "Policy: Dry-Run (SLA)",
      "type": "shell",
      "command": "bash scripts/dev/policy_dryrun.sh logs/decision.jsonl",
      "options": { "cwd": "${workspaceFolder}" },
      "problemMatcher": []
    },
    {
      "label": "Drill: Returnability (HOLD→recover)",
      "type": "shell",
      "command": "bash scripts/guard/returnability_drill.sh",
      "options": { "cwd": "${workspaceFolder}" },
      "problemMatcher": []
    },
    {
      "label": "Guard: Red-Team (smoke)",
      "type": "shell",
      "command": "bash scripts/guard/redteam_smoke.sh",
      "options": { "cwd": "${workspaceFolder}" },
      "problemMatcher": []
    },
    {
      "label": "Chronicle: Weekly snapshot",
      "type": "shell",
      "command": "bash scripts/dev/chronicle_weekly.sh",
      "options": { "cwd": "${workspaceFolder}" },
      "problemMatcher": []
    },
    {
      "label": "Chronicle: Run + Notify (now)",
      "type": "shell",
      "command": "bash -lc 'bash scripts/dev/chronicle_weekly.sh && bash scripts/dev/chronicle_weekly_notify.sh'",
      "options": { "cwd": "${workspaceFolder}" },
      "problemMatcher": []
    },
    {
      "label": "Chronicle: Install weekly timer/cron",
      "type": "shell",
      "command": "bash scripts/dev/chronicle_timer_install.sh",
      "options": { "cwd": "${workspaceFolder}" },
      "problemMatcher": []
    },
    {
      "label": "Prometheus: Rebind (Daegis)",
      "type": "shell",
      "command": "bash scripts/dev/prometheus_rebind.sh",
      "options": { "cwd": "${workspaceFolder}" },
      "problemMatcher": []
    },
    {
      "label": "L5 Gate: Shadow-Apply log (tail)",
      "type": "shell",
      "command": "tail -f logs/policy_apply_shadow.jsonl",
      "options": { "cwd": "${workspaceFolder}" },
      "problemMatcher": []
    },
    {
      "label": "L5 Gate: Controlled Apply check",
      "type": "shell",
      "command": "tail -f logs/policy_apply_controlled.jsonl",
      "options": { "cwd": "${workspaceFolder}" },
      "problemMatcher": []
    },
    {
      "label": "Learn: SimBrain (L7 · dry)",
      "type": "shell",
      "command": "python3 scripts/learn/simbrain.py",
      "options": { "cwd": "${workspaceFolder}", "env": { "PYTHONUNBUFFERED":"1" } },
      "problemMatcher": []
    },
    {
      "label": "L6: Evaluate (manual)",
      "type": "shell",
      "command": "bash scripts/guard/l6_revoke_eval.sh",
      "options": { "cwd": "${workspaceFolder}" },
      "problemMatcher": []
    },
    {
      "label": "Learn: Bandit Shadow (L8 · dry)",
      "type": "shell",
      "command": "python3 scripts/learn/bandit_shadow.py",
      "options": { "cwd": "${workspaceFolder}", "env": { "PYTHONUNBUFFERED":"1" } },
      "problemMatcher": []
    },
    {
      "label": "Learn: Auto-Tune (L9 · dry)",
      "type": "shell",
      "command": "python3 scripts/learn/auto_tune_dry.py",
      "options": { "cwd": "${workspaceFolder}", "env": { "PYTHONUNBUFFERED":"1" } },
      "problemMatcher": []
    },
    {
      "label": "Plan: Apply Planner (L10)",
      "type": "shell",
      "command": "python3 scripts/learn/apply_planner.py",
      "options": { "cwd": "${workspaceFolder}", "env": { "PYTHONUNBUFFERED":"1" } },
      "problemMatcher": []
    },
    {
      "label": "Apply: Auto-Adopt (L10.5)",
      "type": "shell",
      "command": "python3 scripts/learn/apply_autoadopt.py",
      "options": { "cwd": "${workspaceFolder}", "env": { "PYTHONUNBUFFERED":"1" } },
      "problemMatcher": []
    },
    {
      "label": "L10.6: Adopt when cooldown ready",
      "type": "shell",
      "command": "bash scripts/dev/auto_adopt_when_ready.sh",
      "options": { "cwd": "${workspaceFolder}" },
      "problemMatcher": []
    },
    {
      "label": "Learn: SB2 Pipeline",
      "type": "shell",
      "command": "bash scripts/dev/sb2_pipeline.sh",
      "options": { "cwd": "${workspaceFolder}", "env": { "PYTHONUNBUFFERED":"1" } },
      "problemMatcher": []
    },
    {
      "label": "Learn: SB2 Tag Inject (manual)",
      "type": "shell",
      "command": "python3 scripts/learn/sb2_tag_inject.py",
      "options": { "cwd": "${workspaceFolder}", "env": { "PYTHONUNBUFFERED":"1" } },
      "problemMatcher": []
    },
    {
      "label": "Dashboard: Lite snapshot",
      "type": "shell",
      "command": "bash scripts/dev/dashboard_lite.sh",
      "options": { "cwd": "${workspaceFolder}" },
      "problemMatcher": []
    }
  ]
}
