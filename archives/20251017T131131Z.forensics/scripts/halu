#!/usr/bin/env bash
set -euo pipefail
ROOT="${HOME}/daegis"

have(){ command -v "$1" >/dev/null 2>&1; }

cmd="${1:-help}"; shift || true
case "$cmd" in
  help|-h|--help)
    cat <<'USAGE'
halu <subcommand> [...]

Subcommands:
  sentry           - Halu最小SOTの存在/鮮度チェック → :9091 鏡出
  route <card.md>  - Garden GateカードをHalu経由で送信（bus.jsonlに記録）
  emit             - Haluのprom行を生成/補完（emit_halu_prom.sh があれば実行）
  audit            - 現況の棚卸しレポート (docs/overview/HALU_AUDIT_*.md)
  status           - 直近の:9091メトリクス／bus／WORM をダイジェスト表示
  mirror           - agent.md を public_mirror に同期（任意）
USAGE
    ;;

  sentry)
    bash "$ROOT/scripts/ops/halu_sentry.sh"
    ;;

  route)
    card="${1:-}"; [[ -f "$card" ]] || { echo "[ERR] card file required"; exit 2; }
    bash "$ROOT/scripts/guardian/window_route_via_halu.sh" "$card"
    ;;

  emit)
    if [[ -x "$ROOT/scripts/ops/emit_halu_prom.sh" ]]; then
      bash "$ROOT/scripts/ops/emit_halu_prom.sh"
    else
      echo "[WARN] emit_halu_prom.sh が見つかりません（sentryのみ実施）"
    fi
    ;;

  audit)
    ts="$(date -u +%Y%m%dT%H%M%SZ)"
    out="$ROOT/docs/overview/HALU_AUDIT_${ts}.md"
    mkdir -p "$ROOT/docs/overview"
    {
      echo "# Halu Audit (${ts})"
      echo
      echo "## 1) agent.md / 定義ファイル探索"
      if [[ -f "$ROOT/docs/agents/halu/agent.md" ]]; then
        echo " - docs/agents/halu/agent.md (present)"
      else
        echo " - (agent.md not found)"
      fi
      echo
      echo "## 2) リポジトリ内の Halu 関連ファイル（パスだけ）"
      if have rg; then
        (cd "$ROOT" && rg -n --hidden --no-messages 'Halu|daegis_halu' || true) | sed 's/^/ - /' | head -n 80
      else
        (cd "$ROOT" && grep -RIn --exclude-dir='.git' -E 'Halu|daegis_halu' . 2>/dev/null || true) | sed 's/^/ - /' | head -n 80
      fi
      echo
      echo "## 3) Prom SOT :9091 抜粋"
      (curl -fsS localhost:9091/metrics 2>/dev/null | grep -E '^daegis_halu_|^# HELP daegis_halu_' | head -n 30) 2>/dev/null \
        | sed 's/^/    /' || echo "    (none)"
      echo
      echo "## 4) bus / WORM tail"
      echo "### logs/halu/bus.jsonl (tail 5)"
      (tail -n 5 "$ROOT/logs/halu/bus.jsonl" 2>/dev/null || echo "(none)") | sed 's/^/    /'
      echo
      echo "### logs/worm/journal.jsonl (tail 5)"
      (tail -n 5 "$ROOT/logs/worm/journal.jsonl" 2>/dev/null || echo "(none)") | sed 's/^/    /'
      echo
      echo "---"
      echo "_Generated by halu audit (read-only)_"
    } > "$out"
    echo "[OK] wrote $out"
    ;;

  status)
    echo "=== :9091 (halu) ==="
    (curl -fsS localhost:9091/metrics 2>/dev/null | grep -E '^daegis_halu_(sentry_ok|textfile_age_seconds|eval_)' || echo "(none)")
    echo
    echo "=== bus (tail 5) ==="
    (tail -n 5 "$ROOT/logs/halu/bus.jsonl" 2>/dev/null || echo "(none)")
    echo
    echo "=== worm (tail 5) ==="
    (tail -n 5 "$ROOT/logs/worm/journal.jsonl" 2>/dev/null || echo "(none)"
    )
    ;;

  mirror)
    PUB="${HOME}/sec-local-shield/Daegis_Hub/public_mirror/daegis-hub-public"
    [[ -d "$PUB" ]] || { echo "[ERR] public mirror not found: $PUB"; exit 3; }
    mkdir -p "$PUB/docs/agents/halu"
    cp -f "$ROOT/docs/agents/halu/agent.md" "$PUB/docs/agents/halu/" 2>/dev/null || true
    ( cd "$PUB" && git add docs/agents/halu/agent.md && git commit -m "mirror: update Halu agent canon" ) || true
    echo "[OK] mirrored agent.md"
    ;;

  *)
    echo "[ERR] unknown subcommand: $cmd" >&2; exit 1;;
esac

  heartbeat)
    ts="$(date -u +%FT%TZ)"
    echo "{\"ts\":\"$ts\",\"agent\":\"halu\",\"event\":\"heartbeat\"}" >> "$ROOT/logs/halu/bus.jsonl"
    bash "$ROOT/scripts/ops/halu_sentry.sh" >/dev/null 2>&1 || true
    echo "[OK] heartbeat @ $ts"
    ;;

  emit)
    # 任意: eval系のダミー値を0以外に一度だけ入れて配線確認
    PROM="$ROOT/logs/prom/halu.prom"; TMP=$(mktemp)
    awk '1' "$PROM" > "$TMP"
    {
      echo '# HELP daegis_halu_heartbeat_age_seconds seconds since last halu heartbeat'
      echo '# TYPE daegis_halu_heartbeat_age_seconds gauge'
      # ageは sentry側が更新時に上書きでもOK。ここは雛形。
      echo 'daegis_halu_heartbeat_age_seconds 0'
    } >> "$TMP"
    mv "$TMP" "$PROM"
    echo "[OK] emit refreshed: $PROM"
    ;;

